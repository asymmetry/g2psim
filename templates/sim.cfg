// -*- C++ -*-

/* configuration sim.cfg
 * Use to configure all parts used in the simulation.
 * The grammar of this configuration file followed the definition in libconfig:
 *   key = value;
 *   key = { subkey = value };
 * The settings set by functions in Run.C will overwrite settings here.
 * The settings are parsed by G2PRun.
 * G2PAppBase classes will use Configure() to get the settings.
 */

run = {
    debuglevel = 1;
    seed = 0;

    e0 = 2.2535; // GeV

    particle = {
        id = 11;
        mass = 0.5109989281e-3; // GeV/c^2
        charge = -1.6021765654e-19;
    };

    target = {
        type = 10;
        z = 1;
        a = 1;
        mass = 0.938890091; // GeV/c^2
        pf = 0.55;
    };

    hrs = {
        angle = 0.1006531360; // 5.767 deg
        p0 = 2.24949; // GeV/c
    };
};

bpm = {
    a = { res = 0.0; };
    b = { res = 0.0; };
};

field = {
    angle = {
        alpha = 0.0;
        beta = 0.0;
        gamma = 0.0;
//        alpha = 1.5707963267949; // 90 deg
//        beta = 1.5707963267949; // 90 deg // 0.10471975511966; // 6 deg
//        gamma = -1.5707963267949; // -90 deg,
    };
    ratio = 0.0;
};

gen = {
    beam = {
        l_x = 0.0;
        l_y = 0.0;
        l_z = 0.0;
//        tilt = {
//            t = 0.0;
//            p = 0.0;
//        };
    };
    raster = {
        fast = {
            x = 0.0;
            y = 0.0;
        };
        slow = {
            x = 14.0e-3;
            y = 14.0e-3;
        };
    };
    react = {
        t = {
            min = -60.0e-3;
            max = 60.0e-3;
        };
        p = {
            min = -30.0e-3;
            max = 30.0e-3;
        };
        d = {
            min = -0.04;
            max = 0.04;
        };
        l_z = {
            min = -14.1350e-3;
            max = 14.1350e-3;
        };
    };
};

vdc = {
    res = {
        x = 0.0001;
        t = 0.0005;
        y = 0.0001;
        p = 0.0005;
    };
};
