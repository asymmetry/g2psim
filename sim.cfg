// -*- C++ -*-

/* configuration sim.cfg
 * Use to configure all parts used in the simulation.
 * The grammar of this configuration file followed the definition in libconfig:
 *   key = value;
 *   key = { subkey = value };
 * The settings set by functions in Run.C will overwrite settings here.
 * The settings are parsed by G2PRun.
 * G2PAppBase classes will use Configure() to get the settings.
 */

run = {
    n = 50000;
    debug = 1;
    seed = 1;

    e0 = 2.2535; // GeV
    angle = 0.1006531360; // 5.767 deg
    p0 = 2.24949; // GeV/c

    particle = 11; // e-
    hrs = 10; // 484816
    target = 10; // production
    field = 0; // no field
};

target = {
    z = 1;
    a = 1;
    mass = 0.938890091; // GeV/c^2
    pf = 0.55;
    offset = {
        x = 0;
        y = 0;
        z = 0;
    };
};

field = {
    ratio = 0.0;
    origin = {
        x = 0;
        y = 0;
        z = 0;
    };
    angle = {
        alpha = 0.0; // 1.5707963267949; // 90 deg
        beta = 0.0; // 1.5707963267949; // 90 deg // 0.10471975511966; // 6 deg
        gamma = 0.0; // -1.5707963267949; // -90 deg
    };
};

gen = {
    beam = {
        x = 0.0;
        y = 0.0;
        z = 0.0;
        t = 0.0;
        p = 0.0;
    };
    raster = {
        fast = {
            x = 0.0;
            y = 0.0;
        };
        slow = {
            x = 14.0e-3;
            y = 14.0e-3;
        };
    };
    react = {
        t = {
            min = -60.0e-3;
            max = 60.0e-3;
        };
        p = {
            min = -30.0e-3;
            max = 30.0e-3;
        };
        d = {
            min = -0.04;
            max = 0.04;
        };
        z = {
            min = -14.1350e-3;
            max = 14.1350e-3;
        };
    };
};

fwd = {
    sieve = 0;
    vdc = {
        x = 0.0001;
        t = 0.0005;
        y = 0.0001;
        p = 0.0005;
    };
};

bpm = {
    a = {
        x = 0.0;
        y = 0.0;
        z = 0.0;
        res = 0.0;
    };
    b = {
        x = 0.0;
        y = 0.0;
        z = 0.0;
        res = 0.0;
    };
};

rec = {
    x = {
        p0 = 0.0;
        p1 = 0.0;
        p2 = 0.0;
    };
    y = {
        p0 = 0.0;
        p1 = 0.0;
        p2 = 0.0;
    };
    z = 0.0;
    t = {
        p0 = 0.0;
        px = 0.0;
        py = 0.0;
    };
    p = {
        p0 = 0.0;
        px = 0.0;
        py = 0.0;
    };
    d = {
        p0 = 0.0;
        px = 0.0;
        py = 0.0;
    };
};
